using CP;

{int} num = ... ;
tuple preassigned_type {int preassigned_0;int preassigned_1;int preassigned_2;};
{preassigned_type}preassigned = ... ;
int card_num = card(num);
range int_num = 1..card_num;
dvar int square[int_num,int_num]in int_num;

subject to{
	forall(x3 in int_num, x0 in int_num, x1 in int_num: x1!=x3){
		(1*(square[x0, x3]==square[x0, x1])*1)>0 => false;
	}
	forall(x3 in int_num, x0 in int_num, x1 in int_num: x0!=x3){
		(1*(square[x3, x1]==square[x0, x1])*1)>0 => false;
	}
	forall(<x0,x1,L0> in preassigned){
		(1)>0 => (square[x0, x1]==L0)>0;
	}
};


